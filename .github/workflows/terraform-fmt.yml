name: "Terraform Format"

on:
  pull_request:

permissions: 
  contents: read
  issues: write
  pull-requests: write

jobs:
  terraform:
    name: "Terraform Format"
    runs-on: ubuntu-latest
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    steps:

      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          # terraform_version: 0.13.0:
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

      - name: Terraform Format
        id: fmt
        uses: benyboy84/GitHubAction_terraform-fmt@v1.0.0
        continue-on-error: true

      - name: Terraform Format Comment PR
        uses:  benyboy84/GitHubAction_terraform_PrComment@v1.0.0
        with:
          type: fmt
          input: ${{ steps.fmt.outputs.output }}
          exitcode: ${{ steps.fmt.outputs.ExitCode }}
        continue-on-error: true

      - uses: actions/github-script@v6
        if: github.event_name == 'pull_request'
        env:
          PLAN: "terraform\n${{ steps.fmt.outputs.stdout }}"
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const output = `#### Terraform action üñå\`${{ steps.fmt.outputs.ExitCode }}\`
            #### Terraform fmt action exit code üñå\`${{ steps.fmt.outputs.ExitCode }}\`
            #### Terraform action bash üñå\`${{ steps.fmt.outputs.ExitCode }}\`
            #### Terraform fmt local ‚öôÔ∏è\`${{ steps.fmt.outputs.Output }}\`
            

            <details><summary>Show Plan</summary>

            \`\`\`\n
            ${process.env.PLAN}
            \`\`\`

            </details>

            *Pushed by: @${{ github.actor }}, Action: \`${{ github.event_name }}\`*`;

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })

